Feature vector for classification:

Some features are metadata for tracking, shouldn't really be used for classification: commit id, user id, repo name, time of commit, library/package name, user added flag (directly implies non-adoptions)

Commit features and User-specific features are the same for all events triggered by the same commit (could be many)

Commit features:

0	commit id (assigned in order, use in case we have to match stuff up later)
1	user id (integer)
2	repository name (string)
3	time of commit (UTC timestamp)
4	number of packages added by user in this commit
5	number of packages updated between user's last commit and this one (for this specific repo)
6	number of packages added by user and updated recently (intersection of two above sets, not all will be adoptions)

User-specific features:

7	number of packages committed
8	number of packages implicitly seen
9	number of packages adopted
10	time since last commit
11	time since last adoption
12	intra-commit duration for last 10% of user's commits
13	number of repos commited to
14	number of repos commited to in last 10% of user's commits
15	percentage of commits with adoptions
16	percentage of commits with library imports
17	percentage of adoption commits in last 10% of user's commits
18	percentage of library import commits in last 10% of user's commits

Event-specific metadata:

19	library/package name (string)
20	user added? (binary, 1/T if user committed this package at this time, 0/F otherwise-skipped adoption opportunity)

User/Package features:

21	user adopted package? (binary)
22	user already used this package (binary)
23	number of times user has implicitly seen package
24	total number of times user seen all packages
25	number of times user seen package / total number of times user seen all packages
26	number of times user has implicitly seen package within last 10% of user's commits
27	total number of times user seen all packages in last 10%
28	number of times user seen package in last 10% of user's commits / total number of times user seen all packages in last 10%

Package features from GitHub history:

29	number of commits adding this package
30	number of users who have committed this package
31	number of users who have adopted this package (number of package adoptions)
32	number of repos containing this package
33	number of repos this package was adopted in
34	time since last adoption (in seconds)
35	time since last commit (in seconds)
36	average time between package adoptions in last 10% of adoptions
37	average time between commits within last 10% of commits of this package
38	time between commits of this package within last 10% of ALL commits
39	time between adoptions of this package within last 10% of ALL commits
		
Package features from StackOverflow:

40	total number of posts containing this package
41	total views of all posts containing package
42	number of recent posts containing package (last 30 days)
43	total views of recent posts (last 30 days)

Labels are 0/1, assigned based on intra-repo adoption criteria:
	user must be using package for the first time
	package must have been updated in commit repo since the last time user committed

To extract more general adoption labels, where any first usage is an adoption:
	user used package must be false (user not used package before)
	user added package must be true (user committed this package)
if both of those are true, user used package for the first time in that commit - global adoption
should be more of those than the repo-centric adoption criteria
